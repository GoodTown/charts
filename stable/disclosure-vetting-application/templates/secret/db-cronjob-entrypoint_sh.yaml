apiVersion: v1
kind: Secret
metadata:
  name: {{ include "vetting-db-cronjob.fullname" . }}-{{ .Values.entrypointSh.name }}-secret
  labels:
    app.kubernetes.io/name: {{ include "vetting-db-cronjob.fullname" . }}
    helm.sh/chart: {{ include "vetting-app.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}

type: Opaque
stringData:
  entrypoint.sh: |-
        #!/bin/bash
        set -e
{{- if .Values.external.enabled }}
        while ! nc -z {{ .Values.external.host }} {{ .Values.external.port }}; do
{{- else if .Values.postgresql.enabled }}
        while ! nc -z {{ .Release.Name }}-postgresql 5432; do
{{- end }}

          echo "Waiting for POSTGRES!"
          sleep 0.1
        done
        
        echo "First input is $1"

        flask vettingDb wipeTables
        flask db upgrade
        flask vettingDb populateInitData

        if [ $1 == 'true' ]
        then
          flask vettingDb populateTestData
        fi

        gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 50 run:app
